AULA_1: Introdução


AULA_2: Contextos de Avaliação

    Contexto de linha:
        Calcula o valor baseado naquela linha;
    
    Contexto de filtro:
        Calcula o valor baseado nos filtros que estão sendo aplicados;


AULA_3: Testando os conhecimentos de Contexto de filtro

    "Explicação do contaxto de Filtro"


AULA_4: Testando os conhecimentos de Contexto de filtro (Parte 2)

    "Fazendo medidas e jogando na atriz para explicar contexto de filtro"


AULA_5: Entendendo as bases e criando as colunas calculadas

    Coluna calculada:
        Faturamento na Venda = 
            BaseVendas[Tamanho Pedido]*RELATED(CadastroProdutos[Preço Unitário])
        Custo na Venda = 
            BaseVendas[Tamanho Pedido]*RELATED(CadastroProdutos[Custo Unitário])
        Margem na Venda = 
            (BaseVendas[Faturamento na Venda] - BaseVendas[Custo na Venda]) / BaseVendas[Faturamento na Venda]


AULA_6: Devo usar colunas calculadas ou medidas?

    Coluna calculada:
        Lucro na Venda = 
            BaseVendas[Faturamento na Venda] - BaseVendas[Custo na Venda]


AULA_7: Criando Medidas para corrigir os cálculos

    Margem Venda = 
        SUM(BaseVendas[Lucro na Venda]) / SUM(BaseVendas[Faturamento na Venda])
    
    "Para Calculo de porcentagem deve-se utilizar medida pois tem o contexto de Filtro"


AULA_8: Variáveis em DAX para organizar os cálculos

    medida usando Variaveis:
        Margem Venda = 
            VAR Lucro = SUM(BaseVendas[Lucro na Venda]) 
            VAR FAturamento = SUM(BaseVendas[Faturamento na Venda])

            RETURN
                Lucro/FAturamento


AULA_9: Trocando as colunas calculadas por medidas - Parte 1

    Excluindo colunas calculadas:
        Faturamento total;
        Lucro total;
    
    Medidas:
        Faturamento total = 
            SUMX(
                BaseVendas,
                BaseVendas[Tamanho Pedido] * RELATED(CadastroProdutos[Preço Unitário])
            )


10. Trocando as colunas calculadas por medidas - Parte 2

    Medidas:
        Custo total = 
            SUMX(
                BaseVendas,
                BaseVendas[Tamanho Pedido] * RELATED(CadastroProdutos[Custo Unitário])
            )
        Lucro total = 
            [Faturamento total] - [Custo total]
        Marge


AULA_11: Entendendo as funções iterativas do Power BI

    Funções Iteradoras:
        Contexto de linha - Colunas;
        Contexto de filtro - Medidas;
        
        SUMX, MAXX, AVERAGEX, ...


AULA_12: Aplicando as Funções Iterativas (Parte 1)

    Medidas:
        Media de Lucro = 
            AVERAGEX(
                'BaseDevoluções',
                [Faturamento total] - [Custo total]
            )
        Maximo de Lucro = 
            MAXX(
                'BaseDevoluções',
                [Faturamento total] - [Custo total]
            )


AULA_13: Aplicando as Funções Iterativas (Parte 2)

    Medidas:
        Lucro Total com Desconto = 
            SUMX(
                'Base Vendas',
                [Faturamento Total] *
                (1-RELATED('Cadastro Promocoes'[Percentual Desconto])) -
                [Custo Total]
            )


AULA_14: Criando Tabela Calendário com DAX - Função CALENDARAUTO

    Tabela Calendário automatica:
        Calendario = 
            CALENDARAUTO()
        "Verifica menor e menor data entre as tabelas do modelo"
        "pega o inico do ano da menor data e o fim do ano da maior"


AULA_15: Criando Tabela Calendário com DAX - Função CALENDAR

    Tabela Calendário:
        Calendario = 
            VAR Inicio = 
                DATE(YEAR(MIN('Base Vendas'[Data da Venda])),01,01)
            VAR Fim = 
                DATE(YEAR(MAX('Base Vendas'[Data da Venda])),12,31)
            RETURN
                CALENDAR(Inicio, Fim)

        "O ideal é pegar to o ano tanto de menor quanto maior data"


AULA_16: Diferença entre criar Tabelas com DAX ou no Power Query

    "Tabelas criadas em DAX, Não estão no Power Query"
    "Em DAX a tabela deixa o projeto mais leve"


AULA_17: Criando Colunas na Tabela Calendário

    Colunas:
        Ano = YEAR(Calendario[Date]);
        Mes = MONTH(Calendario[Date]);
        Mes_nome = Calendario[Date].[Mês];
        Trimestre = Calendario[Date].[QuarterNo];
        Inicio_mes = STARTOFMONTH(Calendario[Date]);
        Inicio_ano = STARTOFYEAR(Calendario[Date]);
        Inicio_trimestre = STARTOFQUARTER(Calendario[Date]);
    
    "Relacionar calendario e base de vendas"


AULA_18: Criando Tabelas Filtradas com a Função Filter (Parte 1)

    Medidas com filtro:
        Total vendas Ticket > 100 = 
            SUMX(
                FILTER(
                    'Base Vendas',
                    'Base Vendas'[Preco Unitario] > 100
                ),
                'Base Vendas'[Quantidade Vendida]
            )


AULA_19: Criando Tabelas Filtradas com a Função Filter (Parte 2)

    Medidas com filtro:
        Vendas com Fat. > 1000 = 
            COUNTX(
                FILTER(
                    'Base Vendas',
                    [Faturamento Total] > 1000
                ),
                'Base Vendas'[ID Produto]
            )
    "Filtrando tabelas virtuamente"


AULA_20: Transição de Contexto (Parte 1)

    Coluna - Cadastro Produtos:
        Total de Vendas = SUM('Base Vendas'[Quantidade Vendida]) :
            "Retorna valor total, repetindo em todas linhas, pois formula SUM esta no contexto de filtro"
        Total de Vendas = CALCULATE(SUM('Base Vendas'[Quantidade Vendida])) :
            "Adiconando o CALCULATE o resultado será correto, pois trara a formula para o contexto de linha"


AULA_21: Transição de Contexto (Parte 2)

    Coluna - Cadastro Produtos: 
        Total de Vendas = [Total Vendas] :
            "Outra forma, é trazer uma medida para o Calculo de coluna, ficara no contexto de linha"


AULA_22: Exercício - Transição de Contexto - Explicação

    Explicação


AULA_23: Exercício - Transição de Contexto - Resolução

    Coluna calculada:
        Base Vendas:
            Total Devolucoe por Produtos = 
                CALCULATE(SUM('Base Vendas'[Quantidade devolvida]))
            OU
            Total Devolucoe por Produtos = [Total Devolucoe]

        Canais de Vendas:
            Total de vendas por Canal = [Total Vendas]
    

AULA_24: Função VALUES (Parte 1)

    VALUES(): "Função filtra valores distintos"


AULA_25: Função VALUES (Parte 2)

    Medida:
        Media de Faturamento Anual = 
            AVERAGEX(
                VALUES(Calendario[Ano]),
                [Faturamento Total]
            )


AULA_26: Exercício - Função VALUES - Explicação

    EX1: Qual a media de faturamento mensal?
    EX2: Qual foi o Maximo que a empresa faturou em um unico mes?

    Media de faturamento mensal = 
        AVERAGEX(
            VALUES(Calendario[Inicio_mes]),
            [Faturamento Total]
        )
    Maximo de faturamento num mes = 
        MAXX(
            VALUES(Calendario[Inicio_mes]),
            [Faturamento Total]
        )
    

27. Exercício - Função VALUES - Resolução (Parte 1)

    EX: OK


AULA_28: Exercício - Função VALUES - Resolução (Parte 2)

    EX: OK


AULA_29: Funções VALUES e FILTER (Parte 1)

    Meses que faturou mais que 200 Milhões:
        Nova Tabela:
            Meses Fat. < 200 Mi = 
                FILTER(
                    VALUES(Calendario[Inicio_mes]),
                    [Faturamento Total] > 200000000
                )
        Coluna:
            Faturamento = [Faturamento Total]
        
        "Relacinar com Calendario"

        Medida:
            % Meses acima da meta = 
                COUNT('Meses Fat. < 200 Mi'[Inicio_mes]) / 
                DISTINCTCOUNT(Calendario[Inicio_mes])


AULA_30: Funções VALUES e FILTER (Parte 2)

    Crindao calculo anterior em medida:
        Qtd Meses acima da meta = 
            COUNTROWS(
                FILTER(
                    VALUES(Calendario[Inicio_mes]),
                    [Faturamento Total] > 200000000
                )
            )
        
        Qtd Total Meses = 
            DISTINCTCOUNT(Calendario[Inicio_mes])
        
        % Meses acima da meta 2 = 
            [Qtd Meses acima da meta] / [Qtd Total Meses]


AULA_31: Dica - Criando Medidas mais Eficientes

    Resumindo medida em uma só:
        % Meses acima da meta = 
            VAR Meses_acima_meta = 
                COUNTROWS(
                    FILTER(
                        VALUES(Calendario[Inicio_mes]),
                        [Faturamento Total] > 200000000
                    )
                )
            
            VAR Total_Meses = 
                    DISTINCTCOUNT(Calendario[Inicio_mes])
            
            RETURN
                Meses_acima_meta / Total_Meses


AULA_32: Funções VALUES e FILTER (Parte 3)

    Meta que cada marca tenha no maximo 1,15% de devoluções:
        Nova tabela:
            Marcas = 
                Values('Cadastro Produtos'[Nome da Marca])
        
        "Relacionar tabelas"
        
        Medida:
            % Devolucoes = 
                [Total Devolucoes]/[Total Vendas]  

        Coluna:
            % Devolucao por marca = 
                % Devolucao


AULA_33: Funções VALUES e FILTER (Parte 4)

    Marcas = 
        FILTER(
            VALUES('Cadastro Produtos'[Nome da Marca]),
            [% Devolucoes] <= 0.0115
        )
        
    medida:
        COUNTROWS(Marcas)/DISTINCTCOUNT('Cadastro Produtos'[Nome da Marca])
    

AULA_34: Funções VALUES e FILTER (Parte 5)

    % Marcar dentro da meta de Dev. = 
        VAR Marcas_Detro_Meta = 
            COUNTROWS(
                FILTER(
                    VALUES('Cadastro Produtos'[Nome da Marca]),
                    [% Devolucoes] <= 0.0115
                )
            )
        
        VAR Total_Marcas = 
            DISTINCTCOUNT('Cadastro Produtos'[Nome da Marca])
        
        RETURN
            Marcas_Detro_Meta / Total_Marcas


AULA_35: Função CROSSJOIN

    Qual a media de Faturamento de uma Loja em um mês:
        Nova tabela:
            Meses e Lojas = 
                CROSSJOIN(
                    VALUES('Cadastro Lojas'[Nome da Loja]),
                    VALUES(Calendario[Inicio_mes])
                )
                "Adicionou uma loja para mes"
            
        Nova medida:
            Media de Faturamento de Loja por Mes = 
                AVERAGEX(
                    CROSSJOIN(
                        VALUES('Cadastro Lojas'[Nome da Loja]),
                        VALUES(Calendario[Inicio_mes])
                    ),
                    [Faturamento Total]
                )


AULA_36: Exercício - Função CROSSJOIN

    Qual o maximo que um cliente ja gastou com a gente em um ano:
        Medida:
            Maior faturamento de cliente em um ano = 
                MAXX(
                    CROSSJOIN(
                        VALUES('Cadastro Clientes'[ID Cliente]),
                        VALUES(Calendario[Ano])
                    ),
                    [Faturamento Total]
                )


AULA_37: Funções CALCULATE E ALL

    Remove filtros de marcas e traz valor absoluto:
        Total vendas fixo = 
            CALCULATE(
                [Total Vendas],
                ALL('Cadastro Produtos')
            )
        
        % de vendas = 
            [Total Vendas]/[Total vendas fixo]


AULA_38: Funções CALCULATE E ALL - Dicas e cuidados

    Remove filtros independente da tabela e traz valor absoluto:
        Total vendas fixo = 
            CALCULATE(
                [Total Vendas],
                ALL('Base Vendas')
            )


AULA_39: Funções CALCULATE E ALLSELECTED

    Adicionando Filtro de ano:
        Segmantação de dados;
        Calendario - Ano.
    
    Total vendas com segmentação = 
        CALCULATE(
            [Total Vendas],
            ALLSELECTED('Base Vendas')
        )


AULA_40: Organizando as Medidas com Variáveis

    Organizando medidas:
        % de Vendas = 
            VAR Total_vendas_segmentacao =
                CALCULATE(
                    [Total Vendas],
                    ALLSELECTED('Base Vendas')
                )

            RETURN
                [Total Vendas]/Total_vendas_segmentacao


AULA_41: CALCULATE com várias condições (E)

    Qual foi o Fat. da marca contoso em 2018:
        Total Fat. Contoso 2018 = 
            CALCULATE(
                [Faturamento Total],
                'Cadastro Produtos'[Nome da Marca] = "Contoso",
                Calendario[Ano] = 2018
            )
        
        "Utilizar CALCULATE para calculos com filtros especificos"
        
        Total Vendas Audio Onlie = 
            CALCULATE(
                [Total Vendas],
                'Cadastro Subcategorias'[Categoria do Produto] = "Áudio",
                'Cadastro Canais de Venda'[Nome do Canal] = "Online"
            )


AULA_42: CALCULATE com várias condições (OU) - Parte 1

    Qual foi o Fat. da marca contoso ou Litware:
        Qual foi o Fat. da marca contoso + Litware = 
            CALCULATE(
                [Faturamento Total],
                'Cadastro Produtos'[Nome da Marca] = "Contoso" ||
                'Cadastro Produtos'[Nome da Marca] = "Litware"
            )
        Outra Forma:
        Qual foi o Fat. da marca contoso + Litware = 
            CALCULATE(
                [Faturamento Total],
                'Cadastro Produtos'[Nome da Marca] IN {"Contoso", "Litware"}
            )

    Qual Total de devoluções de audio + computador no ano de 2018:
        Total de Devolução audio+computador 2018 = 
            CALCULATE(
                [Total Devolucoes],
                'Cadastro Subcategorias'[Categoria do Produto] IN {"Áudio", "Computador"},
                Calendario[Ano] = 2018
            )


AULA_43: CALCULATE com várias condições (OU) - Parte 2

    Qual foi total de de produtos de Luxo + vendas da marca contoso:
        Total de vendas Luxo + marca contoso = 
            CALCULATE(
                [Total Vendas],
                'Cadastro Produtos'[Tipo] = "Luxo" ||
                'Cadastro Produtos'[Nome da Marca] = "Contoso"
            )


AULA_44: CALCULATE e CONTAINSSTRING - Filtrando se contém um texto específico

    Total de vendas que a promoção de vendas geraram:
        Medida:
            Total vendas promoção ferias = 
                CALCULATE(
                    [Total Vendas],
                    FILTER(
                        'Cadastro Promocoes',
                        CONTAINSSTRING('Cadastro Promocoes'[Nome Promocao],"Férias")
                    )
                )

    Total de vendas de Produtos Bluetooth:
        Total vendas bluetooth = 
            CALCULATE(
                [Total Vendas],
                FILTER(
                    'Cadastro Produtos',
                    CONTAINSSTRING('Cadastro Produtos'[Nome do Produto],"Bluetooth")
                )
            )


AULA_45: Cálculo do Acumulado ao longo do tempo

    faturamento Acumulado:
        Faturamento Acumulado = 
            CALCULATE(
                [Faturamento Total],
                FILTER(
                    ALL(Calendario),
                    Calendario[Date]<=MAX(Calendario[Date])
                )    
            )


AULA_46: Dica - Formatação Personalizada de Data com a Função FORMAT

    Dta personalizada:
        Trimestre - Ano = 
            FORMAT(
                Calendario[Date],
                "Q-YYYY"
            )
        "Ordenar por Iniciotrimestre"


AULA_47: Exercício - Cálculo do Acumulado ao longo do tempo
    
    Acumulado Vendas = 
        CALCULATE(
            [Total Vendas],
            FILTER(
                ALL(Calendario),
                Calendario[Date]<=MAX(Calendario[Date])
            )       
        )


AULA_48: Inteligência de Tempo - Funções TOTALYTD, TOTALQTD, TOTALMTD

    FATURAMENTO ACUMULADO ANO A ANO, (Trimestre E MES):
        Faturamento YTD = 
            TOTALYTD(
                [Faturamento Total],
                Calendario[Date]
            )
    
        Faturamento QTD = 
            TOTALQTD(
                [Faturamento Total],
                Calendario[Date]
            )
        
        Faturamento MTD = 
            TOTALMTD(
                [Faturamento Total],
                Calendario[Date]
            )


AULA_49: Crescimento YoY

    Faturamento do periodo no ano anterior:
        Faturamento YTD Ano anterior = 
            Faturamento YTD Ano anterior = 
                CALCULATE(
                    [Faturamento YTD],
                    PARALLELPERIOD(
                        Calendario[Date],
                        -12,
                        MONTH
                    )
                )
        
    Crescimento ano sobre ano:
        Faturamento YTD YOY = 
            DIVIDE(
                [Faturamento YTD]-[Faturamento YTD Ano anterior],
                [Faturamento YTD Ano anterior],
                "Sem historico"
            )


AULA_50: Função SAMEPERIODLASTYEAR - Variação de Clientes entre os anos

    % Crescimento Num Clientes = 
        VAR total_cliente =  
            DISTINCTCOUNT('Base Vendas'[ID Cliente])
        VAR total_clientes_anterior = 
            CALCULATE(
                total_cliente,
                SAMEPERIODLASTYEAR(
                    Calendario[Date]
                )
            )
        RETURN
            DIVIDE(
                total_cliente-total_clientes_anterior,
                total_clientes_anterior
            )


AULA_51: Função USERELATIONSHIP (Parte 1)

    Relacionamento principal: linha;
    Relacionamento secundario: Tracejado;
    "Não se faz dois relacionamento na mesma coluna"


AULA_52: Função USERELATIONSHIP (Parte 2)

    Total Envios = 
        CALCULATE(
            [Total Vendas],
            USERELATIONSHIP(
                'Base Vendas'[Data do Envio],
                Calendario[Date]
            )
        )

    "Ajustar tabela calendario, pois data de envio vai aleém da venda"


AULA_53: Calculando Dias Úteis entre duas datas (Parte 1)

    Dia da semana = WEEKDAY(Calendario[Datas])
    
    Tipo do dia = 
        IF(
            Calendario[Dia da semana] = 1 || Calendario[Dia da semana] = 7,
            "Fim de semana",
            "Dia de semana"
        )


AULA_54: Calculando Dias Úteis entre duas datas (Parte 2)

    "Relacionar tabela de feriado"

    Coluna de feriado na calendario:
        Feriado = RELATED(Feriados[Feriado])
    
    Coluna dia util:
        Dia Util? = 
            IF(
                Calendario[Tipo do dia] = "Dia de semana" && Calendario[Feriado] = BLANK(),
                1,
                0
            )


AULA_55: Calculando Dias Úteis entre duas datas (Parte 3)

    Dias Uteis = 
        CALCULATE(
            SUM(Calendario[Dia Util?]),
            DATESBETWEEN(
                Calendario[Datas],
                'Base Vendas'[Data da Venda],
                'Base Vendas'[Data do Envio]
            )
        )


AULA_56: Função NETWORKDAYS para calcular dias úteis

    Função que serve para a mesma tarefa anterior:
        Dias Uteis = 
            NETWORKDAYS(
                'Base Vendas'[Data da Venda],
                'Base Vendas'[Data do Envio],
                1, --parametro dos finais de sama (veificar documentação) 
                Feriados
            )


AULA_57: Função SUMMARIZE - Agrupar Tabelas (Parte 1)

    "Agrupar os dados repetidos, fazendo uma conta com esses dodas"

    Nova tabela:
        Vendas Resumidas = 
            SUMMARIZE(
                'Base Vendas Parceladas',
                'Base Vendas Parceladas'[Num Venda],
                'Base Vendas Parceladas'[Nome Cliente],
                'Base Vendas Parceladas'[Marca],
                "Total Pago",
                SUM('Base Vendas Parceladas'[Faturamento])
            )


AULA_58: Função SUMMARIZE - Agrupar Tabelas (Parte 2)

    Filtrando tabela, só comquem já pagou tudo:
        Vendas Resumidas = 
            SUMMARIZE(
                FILTER(
                    'Base Vendas Parceladas',
                    DATEDIFF(
                        'Base Vendas Parceladas'[Data da Venda],
                        TODAY(),
                        MONTH
                    ) > 'Base Vendas Parceladas'[Total Parcelas]
                ),
                'Base Vendas Parceladas'[Num Venda],
                'Base Vendas Parceladas'[Nome Cliente],
                'Base Vendas Parceladas'[Marca],
                "Total Pago",
                SUM('Base Vendas Parceladas'[Faturamento])
            )


AULA_59: Função SUMMARIZE - Agrupar Tabelas (Parte 3)

    Faturamento Medio POR Venda = 
        AVERAGEX(
            SUMMARIZE(
                    FILTER(
                        'Base Vendas Parceladas',
                        DATEDIFF(
                            'Base Vendas Parceladas'[Data da Venda],
                            TODAY(),
                            MONTH
                        ) > 'Base Vendas Parceladas'[Total Parcelas]
                    ),
                    'Base Vendas Parceladas'[Num Venda],
                    'Base Vendas Parceladas'[Nome Cliente],
                    'Base Vendas Parceladas'[Marca],
                    "Total Pago",
                    SUM('Base Vendas Parceladas'[Faturamento])
                ),
            [Total Pago]
        )


AULA_60: Análise de Inadimplência de Clientes (Parte 1)

    Calculo de inadinplencia (clientes que deixam de pagar)
        Coluna:
            Total a ser pago = 
                'Base Vendas Parceladas'[Faturamento]*'Base Vendas Parceladas'[Total Parcelas]
        
        Tabela:
            Vendas Resumidas = 
                SUMMARIZE(
                    FILTER(
                        'Base Vendas Parceladas',
                        DATEDIFF(
                            'Base Vendas Parceladas'[Data da Venda],
                            TODAY(),
                            MONTH
                        ) > 'Base Vendas Parceladas'[Total Parcelas]
                    ),
                    'Base Vendas Parceladas'[Num Venda],
                    'Base Vendas Parceladas'[Nome Cliente],
                    'Base Vendas Parceladas'[Marca],
                    'Base Vendas Parceladas'[Total a ser pago],
                    "Total Pago",
                    SUM('Base Vendas Parceladas'[Faturamento])
                )

        medida:
            Total ja pago = 
                SUM('Vendas Resumidas'[Total Pago])
            
            total devido = 
                SUM('Vendas Resumidas'[Total a ser pago])
            
            % Inadimplencia = 
                ([total devido]- [Total ja pago])/[total devido]


AULA_61: Análise de Inadimplência de Clientes (Parte 2)

    Refazendo caulculo de forma mais eficiente:
        Total faturamento esperado = 
            SUMX(
                SUMMARIZE(
                    FILTER(
                        'Base Vendas Parceladas',
                        DATEDIFF(
                            'Base Vendas Parceladas'[Data da Venda],
                            TODAY(),
                            MONTH
                        ) > 'Base Vendas Parceladas'[Total Parcelas]
                    ),
                    'Base Vendas Parceladas'[Num Venda],
                    'Base Vendas Parceladas'[Nome Cliente],
                    'Base Vendas Parceladas'[Marca],
                    'Base Vendas Parceladas'[Total a ser pago],
                    "Total Pago",
                    SUM('Base Vendas Parceladas'[Faturamento])
                ), 
            'Base Vendas Parceladas'[Total a ser pago]
        )

        total ja pago = 
            SUMX(
                        SUMMARIZE(
                            FILTER(
                                'Base Vendas Parceladas',
                                DATEDIFF(
                                    'Base Vendas Parceladas'[Data da Venda],
                                    TODAY(),
                                    MONTH
                                ) > 'Base Vendas Parceladas'[Total Parcelas]
                            ),
                            'Base Vendas Parceladas'[Num Venda],
                            'Base Vendas Parceladas'[Nome Cliente],
                            'Base Vendas Parceladas'[Marca],
                            'Base Vendas Parceladas'[Total a ser pago],
                            "Total Pago",
                            SUM('Base Vendas Parceladas'[Faturamento])
                        ), 
                    [Total Pago]
                )

        % Inadimplencia = 
            ([Total faturamento esperado]-[total ja pago])/[Total faturamento esperado]


AULA_62: Função RANKX

    Ranking de Produto = 
        RANKX(
            ALL('Cadastro Produtos'),
            [Total Vendas]
        )


AULA_63: Como criar vários tipos de Ranking (Parte 1)

    Ranking de Marca = 
        RANKX(
            ALL('Cadastro Produtos'[Nome da Marca]),
            [Total Vendas]
        )


AULA_64: Como criar vários tipos de Ranking (Parte 2)

    Ranking de Loja = 
        RANKX(
            ALL('Cadastro Lojas'[Nome da Loja]),
            [Total Vendas]
        )
    
    Ranking de País = 
        RANKX(
            ALL('Cadastro Lojas'[Nome do País/Região]),
            [Total Vendas]
        )


AULA_65: Função HASONEVALUE

    Ajustando valor totalizador do Ranking:
        Ranking de Loja = 
            IF(
                HASONEVALUE('Cadastro Lojas'[Nome da Loja]),
                RANKX(
                    ALL('Cadastro Lojas'[Nome da Loja]),
                    [Total Vendas]
                ),
                ""
            )
    
        Ranking de País = 
            IF(
                HASONEVALUE('Cadastro Lojas'[Nome do País/Região]),
                RANKX(
                    ALL('Cadastro Lojas'[Nome do País/Região]),
                    [Total Vendas]
                ),
                ""
            )


AULA_66: Tornando os Rankings Dinâmicos

    Tornando numero do ranking dinamico pelos filtros aplicado (ALLSELECTED):
        Ranking de Loja = 
            IF(
                HASONEVALUE('Cadastro Lojas'[Nome da Loja]),
                RANKX(
                    ALLSELECTED('Cadastro Lojas'[Nome da Loja]),
                    [Total Vendas]
                ),
                ""
            )
        
        Ranking de País = 
            IF(
                HASONEVALUE('Cadastro Lojas'[Nome do País/Região]),
                RANKX(
                    ALLSELECTED('Cadastro Lojas'[Nome do País/Região]),
                    [Total Vendas]
                ),
                ""
            )


AULA_67: Como criar Critérios de Desempate no Ranking

    Criterio de ranking = 
        [Total Vendas] * 100000000 + [Faturamento Total]
    
    Ranking de Produto = 
        IF(
            HASONEVALUE('Cadastro Produtos'[Nome do Produto]),
            RANKX(
                ALLSELECTED('Cadastro Produtos'[Nome do Produto]),
                [Criterio de ranking]
            ),
            ""
        )


AULA_68: Função ISINSCOPE para criar Rankings com Hierarquias

    "Se estiver olhando pro escopo de ano faça o ranking, se for mes faça o rankng por mes"

    Ranking de Datas = 
        IF(
            ISINSCOPE(Calendario[Mes]),
            RANKX(
                ALLSELECTED(Calendario[Mes]),
                [Total Vendas]
            ),
            RANKX(
                ALLSELECTED(Calendario[Ano]),
                [Total Vendas]
            )
        )
    

AULA_69: Exercício: Função ISINSCOPE para criar Rankings com Hierarquias

    Ranking de Continente/Pais = 
        IF(
            ISINSCOPE('Cadastro Lojas'[Nome do País/Região]),
            RANKX(
                ALLSELECTED('Cadastro Lojas'[Nome do País/Região]),
                [Total Vendas]
            ),
            RANKX(
                ALLSELECTED('Cadastro Lojas'[Continente]),
                [Total Vendas]
            )
        )


AULA_70: Função TOPN

    Nova tabela:
        Top 5 Marcas = 
            TOPN(
                5,
                ALL('Cadastro Produtos'[Nome da Marca]),
                [Total Vendas]
            )


AULA_71: Função ADDCOLUMNS

    Top 5 Marcas = 
        ADDCOLUMNS(
            TOPN(
                5,
                ALL('Cadastro Produtos'[Nome da Marca]),
                [Total Vendas]
            ),
            "Vendas por Marca",
            [Total Vendas],
            "Faturamento por marca",
            [Faturamento Total]
        )
    "Tabela criada com as colunas, sem relacionamento"


AULA_72: Exercício - TOPN e ADDCOLUMNS

    Top 15 Clientes = 
        ADDCOLUMNS(
            TOPN(
                15,
                ALL('Cadastro Clientes'[Nome do cliente]),
                [Total Vendas]
            ),
            "Total Compras",
            [Total Vendas],
            "Total Lucro",
            [Lucro Total com desconto]
        )


AULA_73: SUMX e TOPN

    Total vendas Top 5 Marcas = 
        SUMX(
            TOPN(
                5,
                ALLSELECTED(
                    'Cadastro Produtos'[Nome da Marca]
                ),
                [Total Vendas]
            ),
            [Total Vendas]
        )


AULA_74: CALCULATE e TOPN

    Total vendas Top 5 Marcas = 
        CALCULATE(
            [Total Vendas],
            TOPN(
                5,
                ALLSELECTED(
                    'Cadastro Produtos'[Nome da Marca]
                ),
                [Total Vendas]
            )
        )


AULA_75: Entendendo a diferença entre ALL, ALLSELECTED e VALUES (Parte 1)

    Total vendas Top 5 Marcas = 
        CALCULATE(
            [Total Vendas],
            TOPN(
                5,
                VALUES(
                    'Cadastro Produtos'[Nome da Marca]
                ),
                [Total Vendas]
            )
        )
    "Com Values a o calculo ira aceitar os filtros da matriz, all não"


AULA_76: Entendendo a diferença entre ALL, ALLSELECTED e VALUES (Parte 2)

    Ranking das Marcas = 
        RANKX(
            ALLSELECTED('Cadastro Produtos'[Nome da Marca]),
            [Total Vendas]
        )
    "Nessa caso como pracisamos comparar com todas marca temos que uitilizar ALL, pois não ira filtrar diferente do VALUES"
    "Com o ALLSELECTED ira comparar as marcas de acordo com a segmentação"

AULA_77: Ajustando as informações TOPN na Matriz

    calculando somente top 5:
        Total vendas Top 5 Marcas = 
            IF(
                [Ranking das Marcas]<=5,
                CALCULATE(
                    [Total Vendas],
                    TOPN(
                        5,
                        VALUES(
                            'Cadastro Produtos'[Nome da Marca]
                        ),
                        [Total Vendas]
                    )
                ),
                ""
            )
        
    Retirando valor do total no ranking:
        Ranking das Marcas = 
            IF(
                HASONEVALUE('Cadastro Produtos'[Nome da Marca]),
                RANKX(
                    ALLSELECTED('Cadastro Produtos'[Nome da Marca]),
                    [Total Vendas]
                ),
                ""
            )


AULA_78: Exercício - Analisando os Top 15 Produtos (Parte 1)

    Total Vendas Top 15 Produtos = 
        CALCULATE(
            [Total Vendas],
            TOPN(
                15,
                VALUES('Cadastro Produtos'[Nome do Produto]),
                [Total Vendas]
            )
        )


AULA_79: Exercício - Analisando os Top 15 Produtos (Parte 2)

    Ranking de Produto = 
        IF(
            HASONEVALUE('Cadastro Produtos'[Nome do Produto]),
            RANKX(
                ALLSELECTED('Cadastro Produtos'[Nome do Produto]),
                [Total Vendas]
            ),
            ""
        )
    
    Total Vendas Top 15 Produtos = 
        IF(
            [Ranking de Produto]<=15,
            CALCULATE(
                [Total Vendas],
                TOPN(
                    15,
                    VALUES('Cadastro Produtos'[Nome do Produto]),
                    [Total Vendas]
                )
            ),
            ""
        )

