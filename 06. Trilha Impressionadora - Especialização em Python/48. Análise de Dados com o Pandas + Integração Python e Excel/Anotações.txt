AULA_2: O que é e para que serve

    "Análise de Dados (seja para DataScience, seja para trabalhar de forma integrada com arquivos em Excel e Banco de Dados)"
    "Melhor biblioteca/módulo para trabalhar com quantidades enormes de informações"
    "Uma mistura de listas e dicionários de forma muito eficiente"


AULA_3: Pandas e csv

    "Quase sempre quando formos "ler" um arquivo csv, vamos usar o pandas. É prático e bem eficiente."

    Strutura basica para criar um DataFrame:
        vendas_df = pd.read_csv('Contoso - Vendas - 2017.csv', sep=';')


AULA_4: Dataframe do pandas

    As colunas funcionam "como chaves de dicionário"
    As linhas funcionam "como listas"
    
    Algumas Regras:
        vendas_df['coluna_x'] -> uma lista com os valores da coluna_x (em formato dataframe, é um dataframe com 1 coluna só)
        vendas_df[0] -> NÃO FUNCIONA ASSIM PARA DATAFRAMES
        vendas_df[:3] -> pega até a linha de índice 3 do dataframe
        vendas_df[['coluna_x', 'coluna_y', 'coluna_z']] -> cria um novo dataframe com as colunas coluna_x, coluna_y e coluna_z
        vendas_df['coluna_x'][0] -> pega o itemd a 1ª linha da coluna coluna_x
    

AULA_5: Tratamento de Dados e Múltiplas Bases

    às vezes precisaremos mudar o encoding. Possiveis valores para testar:
        encoding='latin1', encoding='ISO-8859-1', encoding='utf-8' ou então encoding='cp1252'
    
    display para ver todos os dataframes
        display(vendas_df)

    Reomver colunas:
        Drop:
            "Romove tanto Linhas quanto Colunas, o que vai difertenciar é o AXIS"
            clientes_df.drop(['Unnamed: 7', 'Unnamed: 8', 'Unnamed: 9', 'Unnamed: 10'], axis=0) ->Remove Linhas
            clientes_df.drop(['Unnamed: 7', 'Unnamed: 8', 'Unnamed: 9', 'Unnamed: 10'], axis=1) -> Remove Colunas
    OU
        DataFrame Selecionando Colunas:
            clientes_df = clientes_df[['ÿID Cliente', 'E-mail']]

    Mesclar Tabelas:
        "Colunas da mesclagem precisam ter o mesmo nome"
        vendas_df = vendas_df.merge(produtos_df, on='ID Produto')

    Renomear Colunas:
        "Necessario para o Merge caso esteja diferente"
        clientes_df = clientes_df.rename(columns={'ÿID Cliente': 'ID Cliente'})
        "Se atentar ao columns"


AULA_6: Análises e Visualização de Dados no pandas (Parte 1)

    Exercicio OK
        .value_counts() para contar quantas vezes cada valor do Dataframe aparece
        .plot() para exibir um gráfico


AULA_7: Análises e Visualização de Dados no pandas (Parte 2)

    Exercicio OK
        .groupby para agrupar o nosso dataframe, de acordo com o que queremos (somando as quantidades de vendas, por exemplo)
        Ordenar o dataframe em ordem decrescente de Quantidade Vendida
            .sort_values
        Pegar o Maior valor diretamente
            .max() e .idxmax()


AULA_8: Filtrando um DataFrame

    "Para filtrarmos, precisamos criar um outro DataFrame com o filtro (Nome coluna, Valor)"
        loja_europeonline = vendas_df[vendas_df['ID Loja'] == 306]
    
    Funcionamento do filtro:
        loja_306 = vendas_df['ID Loja'] == 306
        "cria um dataframe onda vai comparando linha por linha e retorna os valores true para o filtro"
    
    Multiplos filtros:
        loja_europeonline = vendas_df[(vendas_df['ID Loja'] == 306) & (vendas_df['Quantidade Devolvida'] == 0)] 
            "Parenteses necessarios nos multiplos filtros para isolar cada um"
        
            loja_306 = vendas_df['ID Loja'] == 306
            qtd_delvolvida_0 = vendas_df['Quantidade Devolvida'] == 0
        loja_europeonline = vendas_df[loja_306 & qtd_delvolvida_0]

