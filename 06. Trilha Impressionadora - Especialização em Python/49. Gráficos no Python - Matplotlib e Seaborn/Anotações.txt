AULA_1: Orientações - Assista antes de começar

    Explicações do modulo


AULA_2: Matplotlib - Anatomia de uma figura

    "Nasceu para substitir Matlab"
    
    Documentação: https://matplotlib.org/stable/gallery/showcase/anatomy.html


AULA_3: Matplotlib - Primeiros exemplos

    Matplotlib é uma biblioteca de plotagem em Python que produz figuras de qualidade em uma variedade de formatos impressos e ambientes interativos. 
    `matplotlib.pyplot` é um conjunto de funções, e é geralmente importado sob o alias `plt`.

    Cada função `pyplot` faz alguma alteração em uma figura, como criar uma figura, criar uma área de plotagem em uma figura, 
    plotar algumas linhas em uma área de plotagem, decorar a plotagem com rótulos, etc.

    `plt.figure()`: Cria uma nova figura.
    `plt.plot()`: Plota y versus x como linhas e/ou marcadores.
    `plt.scatter()`: Plota um gráfico de dispersão de y versus x.
    `plt.bar()`: Plota um gráfico de barras.
    `plt.xlabel()`: Define o rótulo do eixo x.
    `plt.ylabel()`: Define o rótulo do eixo y.
    `plt.title()`: Define um título para os eixos.
    `plt.grid()`: Configura as linhas da grade.
    `plt.legend()`: Coloca uma legenda no eixo.
    `plt.show()`: Exibe uma figura.


AULA_4: Matplotlib - Paleta de cores - parte 1

    Gráfico Pizza:
        plt.pie(quantidades, labels=categorias)
        plt.show()
    
    autopct e explode:
        destaque = [0, 0, 0, 0.1]
        plt.pie(quantidades, labels=categorias, autopct='%.1f', explode=destaque)
        "O `autopct` é usado para mostrar os valores percentuais."
        "O `explode` é usado para destacar fatias da Pizza de acordo com a lista declarada anteriormente."

    Mudar peleta de cores dos graficos:
        cores = plt.get_cmap('Pastel2').colors 
        plt.pie(quantidades, labels=categorias, autopct='%.1f', explode=destaque, colors=cores)
        Documentação: https://matplotlib.org/stable/tutorials/colors/colormaps.html


AULA_5: Matplotlib - Paleta de cores - parte 2

    Grafico de barras empilhado:
        plt.bar(anos, vendas_online, label='Online')
        plt.bar(anos, vendas_loja, bottom=vendas_online, label='Loja')
        plt.legend()
        "É necessario bottom para empilhar os graficos"
        "label e Legend para adicionar legendas e saber qual informação de cada barra"

    Separa as barra de ano em ano:
        plt.xticks(ticks=anos)
    
    Alterar cores das barras:
        cores = plt.get_cmap('Pastel2').colors
        plt.bar(anos, vendas_online, label='Online', color=cores[0])
        plt.bar(anos, vendas_loja, bottom=vendas_online, label='Loja', color=cores[1])

    Cycler para mudar as cores automatico:
        from cycler import cycler
        cores_cycler = cycler('color', plt.get_cmap('Pastel2').colors)
        plt.rc('axes', prop_cycle=cores_cycler)
        "A partir destas funções todos graficos serão plotados com o tema escolhido"


AULA_6: Matplotlib - exercícios - gráfico de linhas

    exercício OK


AULA_7: Matplotlib - exercícios - gráfico de barras

    exercício OK

    Rotação nos rotulos do grafico:
        plt.xticks(ano, rotation=45)

AULA_8: Matplotlib - exercícios - gráfico de dispersão

    exercício OK

    Mudar tipo da grade de graficos:
        plt.grid(True, linestyle='--')
        "Linestyle serve para todas linhas em geral"

    Tamanho e Cor do ponto no grafico de dispersão:
        plt.scatter(ano, receita, s=receita, c=receita, cmap='Reds')
        "Tamanho do Ponto sera de acordo com aquantidade de receita (Parametro S)"
        "Cor do Ponto sera de acordo com aquantidade de receita (Parametro C e CMAP)"
        "para pegar do mais escuro para o mais claro na cor (cmap='Red_s')"

    Barra de escla de cor com legenda:
        plt.colorbar()


AULA_9: Matplotlib - exercícios - gráfico de pizza

    exercício OK

    Adicionar Sombra no grafico:
        plt.pie(participacao, labels=fabricante, autopct='%.1f', explode=destaque, shadow=True)
        "Parametro Shadow = True"


AULA_10: Matplotlib - Gráfico de linha para apresentação - parte 1

    exercício OK

    Seta e anotação no grafico:
        plt.annotate('Menor Valor', color='red', xy=(2, 78), xytext=(3, 80), arrowprops=dict(facecolor='Red'))

    For para mudar marcadores dinamicamente com Numpy;


AULA_11: Matplotlib - Gráfico de linha para apresentação - parte 2

    exercícios OK

    Faixa de destaque:
        plt.axvspan(6, 11, alpha=0.15, color=cores[1])
        plt.text(6, 80, 'Recuperação de Crescimento', color='green', fontsize=9, weight='bold')

    Rotulo de valores no grafico:
        plt.annotate(vendas[posicao], color=cor, xy=(meses[posicao], vendas[posicao]), xytext=(-5, -5), textcoords='offset points')
        "Adicionar ao for que passar pelos valores"


AULA_12: Matplotlib - Gráfico de barras para apresentação - parte 1

    exercício OK

    Destacar barra com valor maximo:
        for i, barra in enumerate(barras):
            if i != quantidades.index(max(quantidades)):
                barras[i].set_color(cores[2])
                barras[i].set_alpha(0.5)


AULA_13: Matplotlib - Gráfico de barras para apresentação - parte 2

    Ordenar 2 listas:
        print(zip(quantidades, produtos)) #Compacta as duas listas em tupla
        print(list(zip(quantidades, produtos))) #passa para uma lista
        print(sorted(list(zip(quantidades, produtos)))) #ordena as tuplas
    
    Pegar valores ordenados da lista de tuplas:
        quantidades_ordenado = [dado[0] for dado in dados_ordenado]
        produtos_ordenado = [dado[1] for dado in dados_ordenado]
    
    Inverter Ordem das barras pelo eixo da figura:
        plt.gca().invert_yaxis()


AULA_14: Matplotlib - Gráfico de barras empilhadas para apresentação

    exercício OK

    Rotulos da dados centraliados no barras empilhadas:
        barra_online = plt.bar(anos, vendas_online, label='Online')
        plt.bar_label(barra_online, labels=vendas_online, label_type='center', fontweight='bold')


AULA_15: Matplotlib - exercícios - gráfico de barras para apresentação

    Exercícios OK


AULA_16: Matplotlib - exercícios - gráfico de linhas para apresentação

    Exercícios OK

    Marcadores de linhas no primeiro e ultimo elemento:
        for posicao in (-1, 0):
            plt.scatter(anos[posicao], refeicoes[posicao], color=cor_anotacoes)
            plt.annotate(refeicoes[posicao], xy=(anos[posicao], refeicoes[posicao]), xytext=(5, 0), textcoords='offset points', color=cor_anotacoes, fontweight='bold')
 
    Area de destaque:
        plt.axvspan(2020, 2021, alpha=0.5, color=cores[1], zorder=0)
    
    Texto de anotação no grafico:
        plt.text(2020, 40000, 'Pandemia', fontsize=11, fontweight='bold', color=cor_anotacoes)

    ZORDER:
        Ordena as camadas da figura (qual grafico vai em baixo, em cima, etc...)


AULA_17: Matplotlib - introdução poo

    A API Orientada a Objetos, por outro lado, dá mais controle sobre seus gráficos. 
    Você pode trabalhar diretamente com instâncias de `Figure` e `Axes`, permitindo que você manipule cada aspecto do seu gráfico. 
    Isso é especialmente útil para gráficos mais complexos e para a criação de visualizações mais personalizadas.

    "Permite cirar varios graficos em uma figura"


AULA_18: Matplotlib - poo gráficos simples

    "Mudança na contrução dos graficos, para ter uma maior controle dos eixos e fazer figuras mais complexas."

    "No novo formato utilizamos o plt.subplots e fazemos como se fosse um Unpacking, apartir didsso o PLT vira AX."    
        fig, ax = plt.subplots()
        ax.bar(anos, vendas_online, label='Online')
        ax.bar(anos, vendas_loja, bottom=vendas_online, label='Loja')

